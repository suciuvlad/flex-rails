$line-width: $defaultLineWidth !default;

// returns golden font-size, line-height, and width
@mixin golden-text($font-size: 0, $line-width: 0) {
  @if($font-size == 0 and $line-width == 0) {
    @warn "Need either a font size or content width to begin calculations";
  } @else {
    @if(unitless($font-size)) {
      $font-size: $font-size * $u;
    }
    @if(unitless($line-width)) {
      $line-width: $line-width * $u;
    }

    $u: golden-unit($font-size);
    $f: if($font-size == 0, golden-size($line-width), $font-size);
    $l: golden-height($f);
    font-size: $f;
    line-height: $l;
  }
}

// returns golden font-size, line-height, and width
// using adjusted phi where possible
@mixin golden-text-adjusted($font-size: 0, $line-width: $line-width) {
  @if($font-size == 0 and $line-width == 0) {
    @warn "Need either a font size or content width to begin calculations";
  } @else {
    @if(unitless($font-size)) {
      $font-size: $font-size * $u;
    }

    @if(unitless($line-width)) {
      $line-width: $line-width * $u;
    }

    $u: golden-unit($font-size);
    $f: if($font-size == 0, golden-size($line-width), $font-size);
    $l: if($line-width == 0, golden-height($f), golden-height-adjusted($line-width, $f));
    font-size: $f;
    line-height: $l;
  }
}

@mixin headings($size) {
  font-size: calc-em($size, $baseFontSize);
  line-height: calc-em(golden-height-adjusted($defaultLineWidth, $size), $size);
  margin-bottom: calc-em($lineHeight, $size);
}
